audit_dependencies_test(
    name = "sample_core_deps_test",
    blacklist_patterns = [
        "//java/com/facebook/acra:",
        loom_path("facebook/(cpp|java)/.*"),
        loom_path("java/main/com/facebook/loom/provider/.*"),
        "//java/com/facebook/systrace.*",
        "//java/com/facebook/tools/dextr/runtime/.*",
        loom_path("cpp/atrace.*"),
        loom_path("cpp/profiler.*"),
        loom_path("cpp/systemcounters.*"),
        loom_path("cpp/yarn.*"),
        "//third-party/android/support.*",
        "//third-party/java/jackson.*",
        "//third-party/java/guava.*",
        "xplat//AsyncExecutor:",
        "//xplat/liger:",
        "//xplat/Tigon:",
    ],
    contacts = ["oncall+loom@xmail.facebook.com"],
    # has to be a library rule, not a binary
    rule = loom_path("java/main/com/facebook/loom/sample:sample-lib-none"),
    type = "classpath",
)

audit_dependencies_test(
    name = "coldstart_deps_test",
    blacklist_patterns = [
        "//third-party/java/guava:guava",
    ],
    contacts = [
        "oncall+loom@xmail.facebook.com",
    ],
    rule = loom_path("facebook/java/main/com/facebook/loom/config/coldstart:coldstart"),
)

audit_dependencies_test(
    name = "config_deps_test",
    blacklist_patterns = [
        "//java/com/facebook/common/json:json",
        "//java/com/facebook/inject:inject",
        "//third-party/java/jackson:jackson",
        "//third-party/java/guava:guava",
    ],
    contacts = [
        "oncall+loom@xmail.facebook.com",
    ],
    rule = loom_path("facebook/java/main/com/facebook/loom/config/json:json"),
)

def check_loom_deps():
    name = "first_order_deps_must_be_in_whitelist"

    roots = [
        "//libraries/loom/cpp/... - //libraries/loom/cpp/test/...",
        "//libraries/loom/java/... - //libraries/loom/java/test/...",
        "//libraries/loom/python/...",
    ]

    allowed_deps = [
        "//libraries/loom/...",
        "//third-party/javac-tools:tools-java8",  # fbandroid configuration
        "//native/somerge:somerge",  # fbandroid configuration
        "xplat//third-party/gmock:gtest",  # fbandroid configuration
    ]

    allowed_deps_query = " - ".join([dep for dep in allowed_deps])
    roots_query = " + ".join(['deps({}, 1)'.format(root) for root in roots])

    query = "{root} - {allowed}".format(
        root=roots_query,
        allowed=allowed_deps_query,
    )

    script = """#!/usr/bin/env bash
RESULT=\$(buck query "{query}")
if [ -n "$RESULT" ]; then
  echo "Loom has deps outside the allowed roots: \n$RESULT"
  exit 1
fi
"""
    genrule(
        name = name + "_genrule",
        cmd = (
            "echo '{script}' >> $OUT;"
            "chmod +x $OUT;"
        ).format(script=script).format(query=query),
        out = "test.sh",
    )

    sh_test(
        name = name,
        contacts = [
            "oncall+loom@xmail.facebook.com",
        ],
        test = ":" + name + "_genrule",
    )

check_loom_deps()
