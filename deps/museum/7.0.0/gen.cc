// Copyright 2004-present Facebook. All Rights Reserved.
// Generated by: //native/museum/run_codegen.sh
// This is generated code -- do not modify manually.

// @generated SignedSource<<e8c9b9fc1a372e60bfe9b7cf8642d34a>>
// @model md5 b1807d89be629db678aeffa7cbff1366


#include <dex_file.h>
#include <base/logging.h>
#include <base/mutex.h>
#include <class_linker.h>
#include <indirect_reference_table.h>
#include <jni_env_ext.h>
#include <runtime.h>
#include <thread.h>
#include <utf.h>

#include <museum/libart.h>


namespace facebook { namespace museum { namespace art { namespace detail {
  template<typename T>
  T* lookup___ZN3art7Runtime14IsShuttingDownEPNS_6ThreadE() {
    static auto const symbol = ::facebook::libart().get_symbol<T>({
      "_ZN3art7Runtime14IsShuttingDownEPNS_6ThreadE",
    });
    return symbol;
  }
} } } } // namespace facebook::museum::art::detail
namespace art {

  bool Runtime::IsShuttingDown(Thread* p1)  {
    return
      ::facebook::museum::art::detail::lookup___ZN3art7Runtime14IsShuttingDownEPNS_6ThreadE
      <bool
        (Runtime *, Thread*)>()
      (this, p1);
  }
} // namespace art


namespace facebook { namespace museum { namespace art { namespace detail {
  template<typename T>
  T* lookup___ZN3art7Runtime9instance_E() {
    static auto const symbol = ::facebook::libart().get_symbol<T>({
      "_ZN3art7Runtime9instance_E",
    });
    return symbol;
  }
} } } } // namespace facebook::museum::art::detail
namespace art {

  Runtime* Runtime::instance_()  {
    return *
      ::facebook::museum::art::detail::lookup___ZN3art7Runtime9instance_E
      <Runtime*
        >()
      ;
  }
} // namespace art


namespace facebook { namespace museum { namespace art {
using namespace ::art;
void preinitSymbols() {


  ::facebook::museum::art::detail::lookup___ZN3art7Runtime14IsShuttingDownEPNS_6ThreadE
    <bool
      (Runtime *, Thread*)>();



  ::facebook::museum::art::detail::lookup___ZN3art7Runtime9instance_E
    <Runtime*
      >();


}
} } } // namespace facebook::museum::art
